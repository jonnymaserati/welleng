OUTPUT_DIST="dist"
APP_NAMES="corva-welleng"
IGNORED_FILES="requirements*.txt setup.cfg .gitignore Makefile resources/test_data test README.md"
SOURCE="welleng"

## help: Show this help.
.PHONY: helpccscscs
help: Makefile
	@sed -n 's/^##\s//p' $<

## install: Install all requirements.
.PHONY: install
install: install-requirements

## install-requirements: Install requirements.
.PHONY: install-requirements
install-requirements:
	@pip install -U pip
	@pip install .

## install-requirements-lint: install linter requirements.
.PHONY: install-requirements-lint
install-requirements-lint:
	@pip install -U -r requirements_lint.txt

## install-requirements-test: install test requirements.
.PHONY: install-requirements-test
install-requirements-test:
	@pip install -U -r requirements_test.txt

## test: Run tests and show code coverage.
.PHONY: test
test:
	@coverage run --source=${SOURCE} -m unittest -v

## coverage-html: Show code coverage HTML report.
.PHONY: coverage-html
coverage-html:
	@coverage html
	@x-www-browser htmlcov/index.html

## coverage-report: Show code coverage report.
.PHONY: coverage-report
coverage-report:
	@coverage report

## lint: Run linter.
.PHONY: lint
lint:
	@pip install -r requirements_lint.txt
	@flake8
	@isort --check .

## clean: Clean autogenerated files.
.PHONY: clean
clean:
	@-python3 -Bc "for p in __import__('pathlib').Path('.').rglob('*.py[co]'): p.unlink()"
	@-python3 -Bc "for p in __import__('pathlib').Path('.').rglob('__pycache__'): p.rmdir()"
	@-rm -rf welleng/*.egg-info
	@-rm -rf htmlcov
	@-rm -rf .coverage
	@-rm -rf ${OUTPUT_DIST}